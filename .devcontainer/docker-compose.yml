services:
  app:
    container_name: 'auth_service_stakrotckii'
    build:
      context: app/
      dockerfile: Dockerfile
    volumes:
      - ..:/workspace:cached
    ports:
      - '28081:8080'
    command: sleep infinity
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    environment:
      - PYTHONPATH=/workspace/src

  zookeeper:
        image: bitnami/zookeeper:latest
        ports:
            - 2181:2181
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    ports:
      - 9092:9092
      - 9093:9093
    environment:
       - KAFKA_BROKER_ID=1
       - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
       - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
       - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
       - ALLOW_PLAINTEXT_LISTENER=yes
       - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT
       - KAFKA_CFG_LISTENERS=CLIENT://:9092
       - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092
       - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
       - zookeeper

  db:
    container_name: db
    image: inferno681/pgvector
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pass
    ports:
      - 5050:80
    depends_on:
      - db

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
